{
	"info": {
		"_postman_id": "4242cba6-0b7b-4531-bba0-37c7ece1646e",
		"name": "FinalProject-Tarpaulin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32530669"
	},
	"item": [
		{
			"name": "users-api",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "login",
							"item": [
								{
									"name": "/users/login-admin-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.environment.set('ADMINtoken', pm.response.json().token);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has token field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('token');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-admin-400-missing-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing password\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"janderson@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-admin-400-missing-email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing email\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-admin-401-wrong-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 401; invalid password\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"janderson@example.com\",\r\n    \"password\": \"NotARealPassword\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "insert",
							"item": [
								{
									"name": "/users-admin-creating-admin-201",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has id field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"James Anderson\",\r\n    \"email\": \"janderson@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-admin-creating-student-201",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has id field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Mary Williams\",\r\n    \"email\": \"mwilliams@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-admin-creating-instructor-201",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has id field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Michael Smith\",\r\n    \"email\": \"msmith@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"instructor\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-admin-creating-admin-400-missing-name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing name\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"Janderson@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-admin-creating-admin-400-missing-email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing email\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"James Anderson\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-admin-creating-admin-400-missing-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing password\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"James Anderson\",\r\n    \"email\": \"Janderson@example.com\",\r\n    \"role\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-admin-creating-admin-400-missing-role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing role\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"James Anderson\",\r\n    \"email\": \"Janderson@example.com\",\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get",
							"item": [
								{
									"name": "/users/{id}-200-admin-getting-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('name');\r",
													"    pm.expect(jsonData).to.have.property('email');\r",
													"    pm.expect(jsonData).to.have.property('password');\r",
													"    pm.expect(jsonData).to.have.property('role');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{adminId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{adminId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-404-admin-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{invalidId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{invalidId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-200-admin-getting-instructor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('name');\r",
													"    pm.expect(jsonData).to.have.property('email');\r",
													"    pm.expect(jsonData).to.have.property('password');\r",
													"    pm.expect(jsonData).to.have.property('role');\r",
													"    pm.expect(jsonData).to.have.property('courses');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{instructorId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{instructorId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-200-admin-getting-student",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('name');\r",
													"    pm.expect(jsonData).to.have.property('email');\r",
													"    pm.expect(jsonData).to.have.property('password');\r",
													"    pm.expect(jsonData).to.have.property('role');\r",
													"    pm.expect(jsonData).to.have.property('courses');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{studentId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{studentId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "instructor",
					"item": [
						{
							"name": "login",
							"item": [
								{
									"name": "/users/login-instructor-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.environment.set('INSTRUCTORtoken', pm.response.json().token);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has token field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('token');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"evemiller@example.com\",\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-instructor-400-missing-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing password\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"dbrown@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-instructor-400-missing-email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing email\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-student-401-wrong-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 401; invalid password\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"dbrown@example.com\",\r\n    \"password\": \"NotARealPassword\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "insert",
							"item": [
								{
									"name": "/users-instructor-creating-admin-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Patricia Martinez\",\r\n    \"email\": \"pmartinez@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-instructor-creating-instructor-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Patricia Martinez\",\r\n    \"email\": \"pmartinez@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"instructor\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-instructor-creating-student-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has id field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Linda Rodriguez\",\r\n    \"email\": \"lrodriguez@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-instructor-creating-student-400-missing-name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing name\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-instructor-creating-student-400-missing-email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing email\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-instructor-creating-student-400-missing-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing password\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-instructor-creating-student-400-missing-role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing role\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get",
							"item": [
								{
									"name": "/users/{id}-403-instructor-getting-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{adminId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{adminId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-403-instructor-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{invalidId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{invalidId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-403-instructor-getting-student",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{studentId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{studentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-200-instructor-getting-self",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('name');\r",
													"    pm.expect(jsonData).to.have.property('email');\r",
													"    pm.expect(jsonData).to.have.property('password');\r",
													"    pm.expect(jsonData).to.have.property('role');\r",
													"    pm.expect(jsonData).to.have.property('courses');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{instructorId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{instructorId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-403-instructor-getting-another-instructor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{instructorId2}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{instructorId2}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "student",
					"item": [
						{
							"name": "login",
							"item": [
								{
									"name": "/users/login-student-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.environment.set('STUDENTtoken', pm.response.json().token);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has token field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('token');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"ivyanderson@example.com\",\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-student-400-missing-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing password\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"mwilliams@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-student-400-missing-email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing email\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/login-student-401-wrong-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 401; invalid password\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"mwilliams@example.com\",\r\n    \"password\": \"NotARealPassword\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "insert",
							"item": [
								{
									"name": "/users-student-creating-admin-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Patricia Martinez\",\r\n    \"email\": \"pmartinez@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-student-creating-instructor-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Patricia Martinez\",\r\n    \"email\": \"pmartinez@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"instructor\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-student-creating-student-201",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has id field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-student-creating-student-400-missing-name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing name\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-student-creating-student-400-missing-email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing email\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"password\": \"hunter2\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-student-creating-student-400-missing-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing password\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"role\": \"student\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-student-creating-student-400-missing-role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Invalid entry expect: Status code is 400; missing role\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Jennifer Garcia\",\r\n    \"email\": \"jgarcia@example.com\",\r\n    \"password\": \"hunter2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get",
							"item": [
								{
									"name": "/users/{id}-403-student-getting-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{adminId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{adminId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-403-student-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{invalidId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{invalidId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-403-student-getting-instructor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{instructorId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{instructorId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-200-student-getting-self",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('name');\r",
													"    pm.expect(jsonData).to.have.property('email');\r",
													"    pm.expect(jsonData).to.have.property('password');\r",
													"    pm.expect(jsonData).to.have.property('role');\r",
													"    pm.expect(jsonData).to.have.property('courses');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{studentId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{studentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/{id}-403-student-getting-another-student",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Valid entry expect: Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/users/{{studentId2}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												"{{studentId2}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "noAuth",
					"item": [
						{
							"name": "/users-401-noAuth-getting-admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/users/{{adminId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"{{adminId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users-401-noAuth-getting-instructor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/users/{{instructorId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"{{instructorId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/users-401-noAuth-getting-student",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/users/{{studentId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"{{studentId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "courses-api",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "post-students",
							"item": [
								{
									"name": "/courses/{id}/students-admin-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"add\": [ \"{{studentId1}}\", \"{{studentId2}}\" ],\r\n    \"remove\": [ \"{{studentId3}}\", \"{{studentId4}}\" ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								},
								{
									"name": "/courses/{id}/students-admin-404-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"add\": [ \"{{studentId1}}\", \"{{studentId2}}\" ],\r\n    \"remove\": [ \"{{studentId3}}\", \"{{studentId4}}\" ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{invalidId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{invalidId}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get-students",
							"item": [
								{
									"name": "/courses/{id}/students-admin-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('students');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								},
								{
									"name": "/courses/{id}/students-admin-404-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{invalidId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{invalidId}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "delete-id",
							"item": [
								{
									"name": "/courses/{{id}}-admin-204",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses/{{courseIdDelete1}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseIdDelete1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/courses/{{id}}-admin-404-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses/{{invalidId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{invalidId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get-courses",
							"item": [
								{
									"name": "admin-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{ADMINtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "post-courses",
							"item": []
						},
						{
							"name": "get-courses-id",
							"item": []
						},
						{
							"name": "post-courses-id-roster",
							"item": []
						},
						{
							"name": "get-courses-roster",
							"item": []
						}
					]
				},
				{
					"name": "student",
					"item": [
						{
							"name": "insert",
							"item": [
								{
									"name": "/courses/{id}/students-student-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"add\": [ \"{{studentId1}}\", \"{{studentId2}}\" ],\r\n    \"remove\": [ \"{{studentId3}}\", \"{{studentId4}}\" ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseIdDelete3}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseIdDelete3}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get",
							"item": [
								{
									"name": "/courses/{id}/students-student-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "/courses/{{id}}-student-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{STUDENTtoken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseIdDelete2}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseIdDelete2}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "instructor",
					"item": [
						{
							"name": "insert",
							"item": [
								{
									"name": "/courses/{id}/students-instructor-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"add\": [ \"{{studentId5}}\" ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								},
								{
									"name": "/courses/{id}/students-instructor-403-incorrect-instructor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"add\": [ \"{{studentId1}}\", \"{{studentId2}}\" ],\r\n    \"remove\": [ \"{{studentId3}}\", \"{{studentId4}}\" ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseIdCoursesDiffInstruc}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseIdCoursesDiffInstruc}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get",
							"item": [
								{
									"name": "/courses/{id}/students-instructor-200",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has valid fields\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('students');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "/courses/{{id}}-instructor-403",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{INSTRUCTORtoken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseIdDelete3}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseIdDelete3}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "noAuth",
					"item": [
						{
							"name": "insert",
							"item": [
								{
									"name": "/courses/{id}/students-noAuth-401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "get",
							"item": [
								{
									"name": "/courses/{id}/students-noAuth-401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}/students",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}",
												"students"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "/courses/{{id}}-noAuth-401",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/courses/{{courseId}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"courses",
												"{{courseId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "assignments",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "/assignments-admin-201",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has id field\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('id');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"courseId\": \"{{courseId}}\",\r\n  \"title\": \"Assignment 3\",\r\n  \"points\": 100,\r\n  \"due\": \"2022-06-14T17:00:00-07:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/assignments",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments-admin-400-missing-courseId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Assignment 3\",\r\n  \"points\": 100,\r\n  \"due\": \"2022-06-14T17:00:00-07:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/assignments",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}-admin-404-invalid-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"courseId\": \"{{courseId}}\",\r\n  \"title\": \"Assignment 3\",\r\n  \"points\": 100,\r\n  \"due\": \"2022-06-14T17:00:00-07:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/assignments/{{invalidId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{invalidId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}-admin-404-invalid-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments/{{invalidId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{invalidId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}/submissions-admin-200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid fields\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('submissions');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments/{{assignmentId}}/submissions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{assignmentId}}",
										"submissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}/submissions-admin-404-invalid-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments/{{invalidId}}/submissions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{invalidId}}",
										"submissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}/submissions-admin-400-missing-assignmentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "assignmentId",
											"value": "{{assignmentId}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "studentId",
											"value": "{{studentId}}",
											"type": "text"
										},
										{
											"key": "timestamp",
											"value": "{{$isoTimestamp}}",
											"type": "text"
										},
										{
											"key": "grade",
											"value": "100",
											"type": "text"
										},
										{
											"key": "file",
											"description": "TODO-add file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/assignments/{{assignmentId}}/submissions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{assignmentId}}",
										"submissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}/submissions-admin-404-invalid-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMINtoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "assignmentId",
											"value": "{{assignmentId}}",
											"type": "text"
										},
										{
											"key": "studentId",
											"value": "{{studentId}}",
											"type": "text"
										},
										{
											"key": "timestamp",
											"value": "{{$isoTimestamp}}",
											"type": "text"
										},
										{
											"key": "grade",
											"value": "100",
											"type": "text"
										},
										{
											"key": "file",
											"description": "TODO-add file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/assignments/{{invalidId}}/submissions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{invalidId}}",
										"submissions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "instructor",
					"item": [
						{
							"name": "/assignments/{id}-instructor-204",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{INSTRUCTORtoken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments/{{assignmentId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{assignmentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "student",
					"item": [
						{
							"name": "/assignments-student-403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{STUDENTtoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}-student-403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{STUDENTtoken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"courseId\": 123,\r\n  \"title\": \"Assignment 3\",\r\n  \"points\": 100,\r\n  \"due\": \"2022-06-14T17:00:00-07:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/assignments/{{assignmentId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{assignmentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}-student-403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{STUDENTtoken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments/{{assignmentId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{assignmentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/assignments/{id}/submissions-student-403",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{STUDENTtoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignments/{{assignmentId}}/submissions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignments",
										"{{assignmentId}}",
										"submissions"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}